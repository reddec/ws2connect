builds:
- env:
  - CGO_ENABLED=0
  main: ./cmd/ws2connect
  binary: ws2connect
  goarch:
    - amd64
    - 386
    - arm
    - arm64
  goos:
    - linux
    - windows
    - darwin
    - freebsd
  goarm:
    - 5
    - 6
    - 7
  flags:
    - -trimpath
archives:
- replacements:
    darwin: darwin
    linux: linux
    windows: windows
    386: i386
    amd64: x86_64
  name_template: "{{ .ProjectName }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"
  files:
    - LICENSE
    - README.md
    - '*.1.gz'
nfpms:
  - name_template: "{{ .ProjectName }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"
    replacements:
      Linux: linux
      386: i386
    homepage: https://github.com/reddec/ws2connect
    maintainer: Baryshnikov Aleksandr <owner@reddec.net>
    description: CLI to expose TCP service over websocket
    license: MIT
    formats:
      - deb
      - rpm
snapcrafts:
  - name: ws2connect
    publish: true
    summary: CLI to expose TCP/TLS/UDP/UNIX service over websocket
    grade: stable
    confinement: strict
    base: core
    license: MPL-2.0
    description: |
      Expose any TCP service over websocket. Heavily inspired by socat and websocketd.

      * Single binary
      * Few resource consumption
      * Blazing fast
      * Supports multiple endpoints with multiple mappings
      * Supports dynamic and static endpoint mappings
      * Supports TLS (HTTPS) serving
      * Optional Basic or Digest authorization with encrypted (bcrypt or sha) httpasswd file as a secured storage
    apps:
      ws2connect:
        plugs: ['home', 'network', 'personal-files']

checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ .Tag }}-next"
changelog:
  sort: asc
  filters:
    exclude:
    - '^docs:'
    - '^doc:'
    - '^test:'
    - '^build:'